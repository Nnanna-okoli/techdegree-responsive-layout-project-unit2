/* margin and padding to 0, to remove all of the default margin and padding that browsers add to elements.*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* This is required for future use of setting margin-top: auto;
that we will be adding to the footer.
This is so that it will stick to the bottom of the browser window */

html, body {
  height: 100%;
}

header, footer {

  width: 100%;
}



  .section-1 {
    display: flex;
    flex-direction: column;

    background-color: #e6e6e6;
  }

  .profile-img {
      display: flex;
      padding: 2em 3em 3em 3em;
      width: auto;
      height: auto;
  }

  .bio {
    text-align: center;
  padding: 0 3em 2em 3em;
  line-height: 1.3em;
  font-size: 1.5em;


  }


body {
  margin: 0 auto;
  max-width: 100vw;


}

body {
  /* display: flex; */
   flex-direction: column;
   font-family: 'Raleway', sans-serif;
   font-weight: 300;
   color: #454959;
   background-color: #ffff;
}

/* remove the default bullet points and the default left indentation that is added as left padding by the browser */
ul {
  list-style: none;
  padding-left: 0;
}

/* remove the default underline that the browsers apply to links. */
a {
  text-decoration: none;
  text-transform: none;
  color: #454959;

}

a:hover {
color:blue;

}

nav {
  font-family: 'Raleway', sans-serif;
  font-weight: 400;
  letter-spacing: .05em;
  background-color: #e6e6e6;
  padding: 25px;
}

h1, .top-nav {
  text-align: center;
  font-family: 'Raleway', sans-serif;
  font-weight: 500;
}

.top-nav, .top-nav li {
  width: 100%;
}

h1 a, .top-nav a {
  color: #000;
}

.top-nav {
  margin-top: 30px;
}



.top-nav li {
  padding: 10px 0;
  margin: 5px auto;
  background-color: #ffff;
}

.top-nav a {
  color: #454959;
  text-transform: uppercase;
}

.top-nav a:hover {
border-bottom-color: #454959;
border-bottom: 1.5px solid;
padding-bottom: 7px;


}

/*  limit the width of the container to 1100px,
    add a bit of bottom padding, and then center it horizontally on the page.
   Then set our default typography rules for the page. */

.container {
  max-width: 95vw;
  padding: 10px;
  margin: 0 auto;
  font-family: 'Roboto', sans-serif;
}

/* set a 10px margin on all sides to separate each of the boxes from each other.
Give a static starting height of 250px, as there is no content
Then add some general styling. */


.container .col {
  margin: 10px;
  min-height: 300px;
  color: white;
  text-align: center;
  letter-spacing: 1px;
  padding-top: 5px;
}

.col {
   margin: 10px;
   min-height: 250px;
   color: rgb(0, 0, 0);
   text-align: center;
   letter-spacing: 1px;
   padding-top: 5px;
 }

.portfolio-heading, .portfolio-text {
  color: #454959;
  font-family: 'Raleway', sans-serif;


}
.portfolio-heading {
padding: 1em 1em 1em 1em;


}

.portfolio-text {
padding: 0em 1em 1em 1em;
}

#portfolio {
  text-align: center;
  padding: 40px;
}



.box-1 {
 background-color: #ffffff;
 }

 .box-2 {
   background-color: #ffffff;
 }

 .box-3 {
   background-color: #ffffff;
 }

 .box-4 {
   background-color: #ffffff;
 }

 .box-5 {
   background-color: #ffffff;
 }

 .box-6 {
   background-color: #ffffff;
 }

img {
   max-width: 100%
}

.skills-container {
text-align: center;
padding: 2em 0 2em 0;
}

.skills-title {
padding: 0 0 1em 0;
}



 footer {
   display: flex;
 justify-content: space-between;
 align-items: center;
 margin-top: auto;
 padding: 0 20px;
 height: 100px;
 background-color: #e6e6e6;

 }

/*hide the full navigation menu on the mobile view.*/
.full {
  display: none;
}


#contact {
text-align:center;
line-height: 1.5em;
}

.class-title {
padding-bottom: 1em;
}

.contact-container {
background-color: #e6e6e6;
padding: 2em 0 1em 0;

}

.contact-title  {
padding:1em;
font-size: 1.25em;
}

.contact-text {
padding-bottom: 1em;

}


/* ----------------------- MEDIA QUERIES

---------------------------------------*/

/* DESKTOP VIEW

1. remove the margin-top: 30px that we set for top-nav in the mobile-first code
2. change the li to be display: inline-block so that they are oriented in a row on the same line instead of a column
3. width: auto; removes the width: 100% that we set in the mobile-first code.
4. margin-right: 15px to give the li elements a bit of space between each other.
5.
6. .top-nav li:last-child removes the margin-right on the last li element inside of the ul with the class of .top-nav,
so that the nav links stay perfectly centered in the browser.*/

@media (min-width: 768px) {


  .section-1 {
    display: flex;
    flex-direction: row-reverse;
  }


  .profile-img {
      padding: 1em 1em 2em 0;
      width: 45%;
      height: auto;
    }

    .bio {
      min-width: 55%;
      padding: 1em 1em 2em 1em;
      text-align: left;
      margin-top: 0;
      font-size: 1.5em;
    }

  .top-nav {
    margin-top: 0;
  }

  .top-nav li {
    display: inline-block;
    width: auto;
    margin-right: 15px;
    background-color: transparent;
  }

  .top-nav li:last-child {
    margin-right: 0;
  }


  /* 1. we add display: flex; to our container div so that all of the boxes go onto one row.
     2. add flex-wrap: wrap; so that if a width or flex-basis is set on the boxes
     they will wrap to a new row once their combined width/flex-basis is 100%. */

     .container {
      display: flex;
      flex-wrap: wrap;
    }
    /* ensure the boxes take up exactly 50% in our 2 column layout without breaking to a new line due to the 20px
    total left and right margin we added in the mobile-first code. */

    .col {
      flex-basis: calc(50% - 20px);
    }

/* FOOTER we hide “back to top” so it does not appear on screen sizes 768px and above.
 Then we display the full navigation instead, set it to display: inline-block;
 so that the nav links are in a row instead of a column,
 then add margin-left: 20px; to add some space between the links. */

 .top {
  display: none;
}
.full {
  display: inline-block;
  margin-left: 20px;
}


.Profile-container .row{
  display: flex;
  flex-direction: row;
}

.secondary col {
  flex-grow: 2;
}

#portfolio {
flex-basis: 100%
}
}


@media (min-width: 1024px) {
  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

/* min-width: 1024px media query and set the boxes width to take up 1/3rd
  of the containers width using flex-basis: calc(33.333% - 20px);.
  removing the margins we set from the 33.333% width we want the items to take up. */

  .col {
    flex-basis: calc(33.333% - 20px);
  }



  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .top-nav,
  .top-nav li {
    width: initial;
    margin-bottom: 0;
}
}
